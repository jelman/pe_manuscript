names(df)
df1 = read.csv("/home/jelman/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/V1V2_CogData_PE.csv")
nrow(df1)
nrow(vetsa1Dat)
names(df1)
df2 = vetsa1Dat[,c("vetsaid",MR1COR)]
df2 = vetsa1Dat[,c("vetsaid","MR1COR")]
df2 %>% full_join(df1[,c("VETSAID","MR1COR")], by=c("vetsaid","VETSAID"))
?full_join
df2 %>% full_join(df1[,c("VETSAID","MR1COR")], by=c("vetsaid"="VETSAID"))
df3 = df2 %>% full_join(df1[,c("VETSAID","MR1COR")], by=c("vetsaid"="VETSAID"))
cor.test(df3$MR1COR.x, df3$MR1COR.y)
df = read.csv("~/M/PSYCH/KREMEN/Practice Effect Cognition/data/V1V2_CogData_PE.csv")
df = read.csv("~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/V1V2_CogData_PE.csv")
df = tbl_df(df)
df
df = read.csv("~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/V1V2_CogData_PE.csv")
df
name(df)
names(df)
describe(df$MTXRAW)
describe(df$MTXRAW_V2p)
describe(df$STRCRAW)
vetsa2Dat = read_sas("/home/jelman/netshare/K/data/VETSA2_April2015/vetsa2merged_1dec2015_edits.sas7bdat")
vetsa2Dat$strit_V2
vetsa2Dat$strcraw_V2
library(dplyr)
allData = read.csv("~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/raw/V1V2_CogData_Raw.csv",
stringsAsFactors = FALSE)
allData = read.csv("~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/raw/V1V2_CogData_Raw.csv",
stringsAsFactors = FALSE)
allData = read.csv("~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/raw/V1V2_CogData_Raw.csv",
stringsAsFactors = FALSE)
df1 = read_sas("/home/jelman/netshare/M/PSYCH/KREMEN/VETSA DATA FILES_852014/a_VETSA 1 & 2 DATA_MOST UP TO DATE 7_2_2015/VETSA 1 Aging Most up to date July 2 2015/vetsa1merged_22dec2016_nomiss.sas7bdat")
df2 = read_sas("/home/jelman/netshare/M/PSYCH/KREMEN/VETSA DATA FILES_852014/a_VETSA 1 & 2 DATA_MOST UP TO DATE 7_2_2015/VETSA 2 Aging Most up to date July 2 2015/vetsa2merged_23dec2016_nomiss.sas7bdat")
df1[c("vetsaid","STRIT")]
df1 = df1[c("vetsaid","STRIT")]
df2[c("vetsaid","strit_V2")]
df2 = df2[c("vetsaid","strit_V2")]
names(df1) = toupper(names(df1))
names(df2) = toupper(names(df2))
allData %>% left_join(df1, by="VETSAID")
allData %>% left_join(df1, by=c("vetsaid"="VETSAID")
allData %>% left_join(df1, by=c("vetsaid"="VETSAID"))
testdf = allData %>% left_join(df1, by=c("vetsaid"="VETSAID"))
allData = allData %>% left_join(df1, by=c("vetsaid"="VETSAID"))
allData = allData %>% left_join(df2, by=c("vetsaid"="VETSAID"))
head(allData)
write.csv("~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/raw/V1V2_CogData_Raw2.csv", row.names=F)
write.csv(allData, "~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/raw/V1V2_CogData_Raw2.csv", row.names=F)
library(dplyr)
allData = read.csv("~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/raw/V1V2_CogData_Raw.csv",
stringsAsFactors = FALSE)
names(allData) = toupper(names(allData))
timeVarsV1 = c("TRL1T","TRL2T","TRL3T","TRL4T","TRL5T","SRTLMEAN","SRTLSTD","SRTRMEAN",
"SRTRSTD","SRTGMEAN","SRTGSTD","CHRTLMEAN","CHRTRMEAN","CHRTLSTD",
"CHRTRSTD","CHRTGMEAN","CHRTGSTD")
timeVarsLogV1 = paste0(timeVarsV1, "LOG")
timeVarsV2 = paste0(timeVarsV1, "_V2")
timeVarsLogV2 = paste0(timeVarsLogV1, "_V2")
allData[timeVarsLogV1] = log(allData[timeVarsV1])
allData = dplyr::select(allData, -one_of(timeVarsV1))
allData[timeVarsLogV2] = log(allData[timeVarsV2])
allData = dplyr::select(allData, -one_of(timeVarsV2))
write.csv(allData,
"~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/V1V2_CogData_Unadj.csv",
row.names = FALSE)
rawVarsV1 = c("MR1COR","TRL1TLOG","TRL2TLOG","TRL3TLOG","TRL4TLOG","TRL5TLOG","CSSACC","MTXRAW","CVA1RAW","CVATOT","CVSDFR","CVLDFR",
"AFQTPCT","AFQTVOCPCT","AFQTARPCT","AFQTTLPCT","AFQTBXPCT","AFQTPCTTRAN","AFQTVOCPCTTRAN","AFQTARPCTTRAN","AFQTTLPCTTRAN",
"AFQTBXPCTTRAN","DSFRAW","DSBRAW","DSFMAX","SSPFRAW","SSPBRAW","LNTOT","LMITOT","LMDTOT","VRITOT","VRDTOT","VRCTOT","HFTOTCOR",
"STRWRAW","STRCRAW","STRCWRAW","STRIT","LFFCOR","LFACOR","LFSCOR","LFCOR","CFANCOR","CFBNCOR","CFCOR","CSCOR","SRTLMEANLOG",
"SRTLSTDLOG","SRTRMEANLOG","SRTRSTDLOG","SRTGMEANLOG","SRTGSTDLOG","CHRTLMEANLOG","CHRTRMEANLOG","CHRTLSTDLOG",
"CHRTRSTDLOG","CHRTGMEANLOG","CHRTGSTDLOG","RSATOT","AXHITRATE","AXFARATE","AXMISSRATE","BXHITRATE","BXFARATE",
"BXMISSRATE","CPTDPRIME")
rawVarsV2 = paste0(rawVarsV1, "_V2")
rawVarsV1
rawVarsV2
adjustDataset = function(regVars,adjVars,nDemoVars=7,suffix="adj",data){
#######################################################################
# Adjust dataset for specified set of variables.Regresses passed      #
# variables from each measure using linear regression. The intercept  #
# is added back in to retain mean level information.                  #
# Input:                                                              #
# regVars = List of variables to regress out                          #
# adjVars = List of variables to be adjusted                          #
# nDemoVars = Number of demographic variables included in dataframe.  #
#             These should be the first 1:nDemoVars columns of        #
#             the dataframe                                           #
#######################################################################
# Read variable names from data and store in a vector
allNames <- names(data)
#*** Check variables are correct
nVars <- length(adjVars)
### Creating Storate Data Frame ###
# Set number of individuals
n <- dim(data)[1]
tot <- dim(data)[2]
# Create Data Frame
data <- cbind(data,matrix(NA,nrow=n,ncol=nVars))
names(data) <- c(allNames,paste(adjVars,suffix,sep="_"))
### Running Loop Using lapply ###
# fitting models
models <- lapply(adjVars, function(x) {
fmla = as.formula(paste0(x," ~ ",regVars))
lm(formula=fmla, data = data, na.action=na.exclude)
})
# storing residuals from each model into data frame
for(v in 1:nVars){
data[,tot+v] <- residuals(models[[v]]) + coef(models[[v]])[[1]]
}
#dataR is now your residualized parameters
dataR <- data[,c(1:nDemoVars,(tot+1):(tot+nVars))]
dataR
}
addScaleVals = function(df,varname, x) {
###########################################################
# Save mean and SD of all variables into a dataframe      #
# Input:                                                  #
# df = Initialized dataframe to hold results              #
# varname = String name of variable                       #
# x = Scaled vector of data                               #
###########################################################
meanVal = attr(x, which="scaled:center")
sdVal = attr(x, which="scaled:scale")
rbind(df, data.frame(Variable=varname, Mean=meanVal, SD=sdVal))
}
adjVars = c(rawVarsV1, rawVarsV2)
nDemoVars = 7
data = subset(allData, !is.na(allData$NAS201TRAN))
regVars = paste("scale(NAS201TRAN)", sep=" + ")
nasAdjRawScoresData = adjustDataset(regVars, adjVars, nDemoVars, "nas", data)
write.csv(nasAdjRawScoresData, "~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/V1V2_CogData_NASAdj.csv",
row.names=F)
scaleValues = data.frame()
nasAdjZscoresData = nasAdjRawScoresData
for(i in rawVarsV1){
varname = paste0(i, "_nas")
zvarname = gsub("_nas","_znas",varname)
nasAdjZscoresData[[zvarname]] = scale(nasAdjZscoresData[[varname]])
scaleValues = addScaleVals(scaleValues, varname, nasAdjZscoresData[[zvarname]])
nasAdjZscoresData[[varname]] = NULL
}
for(i in rawVarsV2){
varnameV2 = paste0(i, "_nas")
zvarname = gsub("_nas","_znas",varnameV2)
varnameV1 = gsub("_V2","",varnameV2)
nasAdjZscoresData[[zvarname]] = scale(nasAdjZscoresData[[varnameV2]],
center=scaleValues$Mean[scaleValues$Variable==varnameV1],
scale=scaleValues$SD[scaleValues$Variable==varnameV1])
nasAdjZscoresData[[varnameV2]] = NULL
}
write.csv(nasAdjZscoresData,
"~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/V1V2_CogData_NASAdj_Z.csv",
row.names = FALSE)
write.csv(scaleValues, "~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/V1_NASAdj_Means_SDs.csv",
row.names = FALSE)
adjVars = c(rawVarsV1, rawVarsV2)
nDemoVars = 7
data = subset(allData, !is.na(allData$TEDALL))
regVars = paste("scale(TEDALL)", sep=" + ")
tedAdjRawScoresData = adjustDataset(regVars, adjVars, nDemoVars, "ted", data)
write.csv(tedAdjRawScoresData, "~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/V1V2_CogData_TEDALLAdj.csv",
row.names=F)
scaleValues = data.frame()
tedAdjZscoresData = tedAdjRawScoresData
for(i in rawVarsV1){
varname = paste0(i, "_ted")
zvarname = gsub("_ted","_zted",varname)
tedAdjZscoresData[[zvarname]] = scale(tedAdjZscoresData[[varname]])
scaleValues = addScaleVals(scaleValues, varname, tedAdjZscoresData[[zvarname]])
tedAdjZscoresData[[varname]] = NULL
}
for(i in rawVarsV2){
varnameV2 = paste0(i, "_ted")
zvarname = gsub("_ted","_zted",varnameV2)
varnameV1 = gsub("_V2","",varnameV2)
tedAdjZscoresData[[zvarname]] = scale(tedAdjZscoresData[[varnameV2]],
center=scaleValues$Mean[scaleValues$Variable==varnameV1],
scale=scaleValues$SD[scaleValues$Variable==varnameV1])
tedAdjZscoresData[[varnameV2]] = NULL
}
write.csv(tedAdjZscoresData,
"~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/V1V2_CogData_TEDALLAdj_Z.csv",
row.names = FALSE)
write.csv(scaleValues, "~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/V1_TEDALLAdj_Means_SDs.csv",
row.names = FALSE)
library(doParallel)
?foreach
?pROC::roc
library(dplyr)
varNames = c("MR1COR","TRL1TLOG","TRL2TLOG","TRL3TLOG","TRL4TLOG","TRL5TLOG","CSSACC","MTXRAW","CVA1RAW","CVATOT","CVSDFR","CVLDFR",
"AFQTPCT","AFQTVOCPCT","AFQTARPCT","AFQTTLPCT","AFQTBXPCT","AFQTPCTTRAN","AFQTVOCPCTTRAN","AFQTARPCTTRAN","AFQTTLPCTTRAN",
"AFQTBXPCTTRAN","DSFRAW","DSBRAW","DSFMAX","SSPFRAW","SSPBRAW","LNTOT","LMITOT","LMDTOT","VRITOT","VRDTOT","VRCTOT","HFTOTCOR",
"STRWRAW","STRCRAW","STRCWRAW","STRIT","LFFCOR","LFACOR","LFSCOR","LFCOR","CFANCOR","CFBNCOR","CFCOR","CSCOR","SRTLMEANLOG",
"SRTLSTDLOG","SRTRMEANLOG","SRTRSTDLOG","SRTGMEANLOG","SRTGSTDLOG","CHRTLMEANLOG","CHRTRMEANLOG","CHRTLSTDLOG",
"CHRTRSTDLOG","CHRTGMEANLOG","CHRTGSTDLOG","RSATOT","AXHITRATE","AXFARATE","AXMISSRATE","BXHITRATE","BXFARATE",
"BXMISSRATE","CPTDPRIME")
zeroFloor = function(x){
x = (x + abs(x)) / 2
x}
timeCeiling = function(x, maxt){
x[x>log(maxt) & !is.na(x)] = log(maxt)
x
}
unadj_df = read.csv("~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/V1V2_CogData_Unadj.csv",
stringsAsFactors = F)
pracEffects = read.csv("~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/results/PracEffectValues_NASAdj.csv",
row.names=1, stringsAsFactors = F)
unadj_df_PEadj = unadj_df
idxV1V2 = which(unadj_df_PEadj$VETSAGRP=="V1V2")
for (varName in varNames) {
varName_V2 = paste0(varName, "_V2")
newVarName_V2 = paste0(varName_V2,"p")
peVal = pracEffects[varName,"PracticeEffect"]
unadj_df_PEadj[, newVarName_V2] = unadj_df_PEadj[, varName_V2]
unadj_df_PEadj[idxV1V2, newVarName_V2] = unadj_df_PEadj[idxV1V2, newVarName_V2] - peVal
unadj_df_PEadj[[varName_V2]] = NULL
}
negVars = names(unadj_df_PEadj)[grepl("TRAN", names(unadj_df_PEadj)) | grepl("DPRIME", names(unadj_df_PEadj))]
posVars = names(unadj_df_PEadj)[(!names(unadj_df_PEadj) %in% negVars) & (!sapply(unadj_df_PEadj, is.character))]
unadj_df_PEadj = unadj_df_PEadj %>% mutate_at(.cols=posVars, .funs=zeroFloor)
trl240vars = names(unadj_df_PEadj)[grepl("TRL4T", names(unadj_df_PEadj))]
unadj_df_PEadj = unadj_df_PEadj %>% mutate_at(.cols=trl240vars, .funs=timeCeiling, maxt=240)
trl150vars = names(unadj_df_PEadj)[grepl("TRL[1235]T", names(unadj_df_PEadj))]
unadj_df_PEadj = unadj_df_PEadj %>% mutate_at(.cols=trl150vars, .funs=timeCeiling, maxt=150)
write.csv(unadj_df_PEadj, '~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/V1V2_CogData_PE.csv',
row.names=FALSE)
nas201adjzscore_df = read.csv("~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/V1V2_CogData_NASAdj_Z.csv",
stringsAsFactors = F)
pracEffects_Zscored = read.csv("~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/results/PracEffectValues_NASAdj_Z.csv",
row.names=1, stringsAsFactors = F)
nas201adjzscore_PEadj = nas201adjzscore_df
idxV1V2 = which(nas201adjzscore_PEadj$VETSAGRP=="V1V2")
for (varName in varNames) {
varName_V2 = paste0(varName, "_V2_znas")
newVarName_V2 = paste0(varName_V2,"p")
peVal = pracEffects_Zscored[varName,"PracticeEffect"]
nas201adjzscore_PEadj[, newVarName_V2] = nas201adjzscore_PEadj[, varName_V2]
nas201adjzscore_PEadj[idxV1V2, newVarName_V2] = nas201adjzscore_PEadj[idxV1V2, newVarName_V2] - peVal
nas201adjzscore_PEadj[[varName_V2]] = NULL
}
write.csv(nas201adjzscore_PEadj, '~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/V1V2_CogData_NASAdj_Z_PE.csv',
row.names=FALSE)
nas201adj_df = read.csv("~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/V1V2_CogData_NASAdj.csv",
stringsAsFactors = F)
pracEffects = read.csv("~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/results/PracEffectValues_NASAdj.csv",
row.names=1, stringsAsFactors = F)
nas201adj_PEadj = nas201adj_df
idxV1V2 = which(nas201adj_PEadj$VETSAGRP=="V1V2")
for (varName in varNames) {
varName_V2 = paste0(varName, "_V2_nas")
newVarName_V2 = paste0(varName_V2,"p")
peVal = pracEffects[varName,"PracticeEffect"]
nas201adj_PEadj[, newVarName_V2] = nas201adj_PEadj[, varName_V2]
nas201adj_PEadj[idxV1V2, newVarName_V2] = nas201adj_PEadj[idxV1V2, newVarName_V2] - peVal
nas201adj_PEadj[[varName_V2]] = NULL
}
negVars = names(nas201adj_PEadj)[grepl("TRAN", names(nas201adj_PEadj)) | grepl("DPRIME", names(nas201adj_PEadj))]
posVars = names(nas201adj_PEadj)[(!names(nas201adj_PEadj) %in% negVars) & (!sapply(nas201adj_PEadj, is.character))]
nas201adj_PEadj = nas201adj_PEadj %>% mutate_at(.cols=posVars, .funs=zeroFloor)
trl240vars = names(nas201adj_PEadj)[grepl("TRL4T", names(nas201adj_PEadj))]
nas201adj_PEadj = nas201adj_PEadj %>% mutate_at(.cols=trl240vars, .funs=timeCeiling, maxt=240)
trl150vars = names(nas201adj_PEadj)[grepl("TRL[1235]T", names(nas201adj_PEadj))]
nas201adj_PEadj = nas201adj_PEadj %>% mutate_at(.cols=trl150vars, .funs=timeCeiling, maxt=150)
write.csv(nas201adj_PEadj, '~/netshare/M/PSYCH/KREMEN/Practice Effect Cognition/data/V1V2_CogData_NASAdj_PE.csv',
row.names=FALSE)
cor.test(unadj_df_PEadj$STRCRAW, unadj_df_PEadj$STRIT)
cor.test(unadj_df_PEadj$STRCWRAW, unadj_df_PEadj$STRIT)
cor.test(unadj_df_PEadj$STRCWRAW_V2p, unadj_df_PEadj$STRIT_V2p)
